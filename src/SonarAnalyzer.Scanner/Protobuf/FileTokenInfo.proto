//
// SonarAnalyzer for .NET
// Copyright (C) 2015-2016 SonarSource SA
// mailto:contact@sonarsource.com
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3 of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02
//

syntax = "proto3";
package sonaranalyzer;

option csharp_namespace = "SonarAnalyzer.Protobuf";
option java_package = "org.sonarsource.dotnet.protocol";

option optimize_for = SPEED;

// Lines start at 1 and line offsets start at 0
message TextRange {
  int32 start_line = 1;
  // End line (inclusive)
  int32 end_line = 2;
  int32 start_offset = 3;
  int32 end_offset = 4;
}

enum TokenType {
	UNKNOWN = 0;
	DECLARATION_NAME = 1;
	IDENTIFIER = 2;
	NUMERIC_LITERAL = 3;
	STRING_LITERAL = 4;
	KEYWORD = 5;
	COMMENT = 6;
	TYPE_PARAMETER = 7;
}

// Naming convention:
// we use singular for repeated field names, because that works better in Java, and we don't care in C#

message FileTokenInfo {
	string file_path = 1;

	message TokenInfoInFile {
		TokenType token_type = 1;
		TextRange text_range = 2;
	}

	repeated TokenInfoInFile token_info = 2;
}

message FileTokenReferenceInfo {
	string file_path = 1;

	message SymbolReference {
		TextRange declaration = 1;
		repeated TextRange reference = 2;
	}

	repeated SymbolReference reference = 2;
}
